# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Reseplaneraren.Api.Geometry do
  @moduledoc """
  API calls for all endpoints tagged `Geometry`.
  """

  alias Reseplaneraren.Connection
  import Reseplaneraren.RequestBuilder


  @doc """
  Returns the polyline for a leg.
  Returns the polyline for a leg. This service can not be called directly but only by reference URLs in a result of a trip or JourneyDetail request. The result contains a list of WGS84 coordinates which can be used to display the polyline on a map.If the parameter needItinerary&#x3D;1 is passed in the URL of the trip request that contained the reference to the Geometry service, the geometry reference link will also contain an itinerary for walk, bike and car legs, that can be used to generate turn-by-turn instructions.

  ## Parameters

  - connection (Reseplaneraren.Connection): Connection to server
  - ref (String.t): the ref query parameter, URL decoded, from a URL retrieved as a result of a trip or JourneyDetail request
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Reseplaneraren.Model.Geometry{}} on success
  {:error, info} on failure
  """
  @spec get_geometry(Tesla.Env.client, String.t, keyword()) :: {:ok, Reseplaneraren.Model.Geometry.t} | {:error, Tesla.Env.t}
  def get_geometry(connection, ref, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/geometry")
    |> add_param(:query, :"ref", ref)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Reseplaneraren.Model.Geometry{})
  end
end
